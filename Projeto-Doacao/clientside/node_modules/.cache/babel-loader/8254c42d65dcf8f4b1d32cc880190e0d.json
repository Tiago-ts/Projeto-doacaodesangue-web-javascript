{"ast":null,"code":"import axios from 'axios';\nexport const register = dataUser => {\n  return axios({\n    method: 'post',\n    baseURL: 'http://localhost:5000',\n    url: 'auth/register',\n    data: dataUser\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};\nexport const logIn = dataUser => {\n  return axios({\n    method: 'post',\n    baseURL: 'http://localhost:5000',\n    url: 'auth/authenticate',\n    data: dataUser\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};\nexport const uploadImage = image => {\n  return axios({\n    method: 'post',\n    baseURL: 'https://api.imgur.com',\n    url: '3/image/',\n    headers: {\n      \"Authorization\": \"Client-ID 4d2ea9c103ce993\",\n      'content-type': 'multipart/form-data'\n    },\n    data: image\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};\nexport const updateUser = (image, token) => {\n  return axios({\n    method: 'put',\n    baseURL: 'http://localhost:5000',\n    url: '/users/',\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    },\n    data: image\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};\nexport const sendPost = (data, token) => {\n  return axios({\n    method: 'post',\n    baseURL: 'http://localhost:5000',\n    url: '/posts/',\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    },\n    data: data\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};\nexport const getPosts = token => {\n  return axios({\n    method: 'get',\n    baseURL: 'http://localhost:5000',\n    url: '/posts/list',\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};\nexport const getAllUsers = token => {\n  return axios({\n    method: 'get',\n    baseURL: 'http://localhost:5000',\n    url: '/users/list',\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};\nexport const addNewFriend = (data, token) => {\n  console.log(data);\n  return axios({\n    method: 'post',\n    baseURL: 'http://localhost:5000',\n    url: '/friends',\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    },\n    data: data\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};\nexport const getFriends = token => {\n  return axios({\n    method: 'get',\n    baseURL: 'http://localhost:5000',\n    url: '/friends',\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(response => {\n    if (response) return response.data;\n  }).catch(err => {\n    if (err) return {\n      error: \"Internal Error\"\n    };\n  });\n};","map":{"version":3,"sources":["C:/Users/Tiago Silva/Documents/GitHub/Projeto-doacaodesangue-web-javascript/Projeto-Doacao/clientside/src/components/functions/UserFunctions.js"],"names":["axios","register","dataUser","method","baseURL","url","data","then","response","catch","err","error","logIn","uploadImage","image","headers","updateUser","token","sendPost","getPosts","getAllUsers","addNewFriend","console","log","getFriends"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const register = dataUser =>{\n    return axios(\n        {\n            method: 'post',\n            baseURL: 'http://localhost:5000',\n            url: 'auth/register',\n            data: dataUser\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}\nexport const logIn = dataUser =>{\n    return axios(\n        {\n            method: 'post',\n            baseURL: 'http://localhost:5000',\n            url: 'auth/authenticate',\n            data: dataUser\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}\nexport const uploadImage = image =>{\n    return axios(\n        {\n            method: 'post',\n            baseURL: 'https://api.imgur.com',\n            url: '3/image/',\n            headers:{\"Authorization\" : \"Client-ID 4d2ea9c103ce993\", 'content-type': 'multipart/form-data'},\n            data: image\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}\nexport const updateUser = (image, token) =>{\n    return axios(\n        {\n            method: 'put',\n            baseURL: 'http://localhost:5000',\n            url: '/users/',\n            headers:{\"Authorization\" : `Bearer ${token}`},\n            data: image\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}\nexport const sendPost = (data, token) =>{\n    return axios(\n        {\n            method: 'post',\n            baseURL: 'http://localhost:5000',\n            url: '/posts/',\n            headers:{\"Authorization\" : `Bearer ${token}`},\n            data: data\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}\nexport const getPosts = (token) =>{\n    return axios(\n        {\n            method: 'get',\n            baseURL: 'http://localhost:5000',\n            url: '/posts/list',\n            headers:{\"Authorization\" : `Bearer ${token}`},\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}\nexport const getAllUsers = (token) =>{\n    return axios(\n        {\n            method: 'get',\n            baseURL: 'http://localhost:5000',\n            url: '/users/list',\n            headers:{\"Authorization\" : `Bearer ${token}`},\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}\nexport const addNewFriend = (data,token) =>{\n    console.log(data)\n    return axios(\n        {\n            method: 'post',\n            baseURL: 'http://localhost:5000',\n            url: '/friends',\n            headers:{\"Authorization\" : `Bearer ${token}`},\n            data: data\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}\nexport const getFriends = (token) =>{\n    \n    return axios(\n        {\n            method: 'get',\n            baseURL: 'http://localhost:5000',\n            url: '/friends',\n            headers:{\"Authorization\" : `Bearer ${token}`},\n        }\n    ).then(response =>{\n        if(response)\n        return response.data\n    }).catch(err => {\n        if(err)\n        return {error : \"Internal Error\"}\n    })\n}"]},"metadata":{},"sourceType":"module"}