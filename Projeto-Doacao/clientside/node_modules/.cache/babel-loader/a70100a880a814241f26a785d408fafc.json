{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiago Silva\\\\Documents\\\\GitHub\\\\Projeto-doacaodesangue-web-javascript\\\\Projeto-Doacao\\\\clientside\\\\src\\\\components\\\\Search.js\";\nimport React, { useEffect, useState } from 'react';\nimport { SearchContent, Person } from './Styles/Search';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { getAllUsers, addNewFriend, getFriends } from './functions/UserFunctions';\nimport jwt from 'jwt-decode';\nexport const Search = input => {\n  const [users, setUsers] = useState([]);\n  const [usersFilters, setUsersFilters] = useState([]);\n  const userId = jwt(localStorage.token).id;\n\n  const searchingFor = term => {\n    return x => {\n      return x.name.toLowerCase().includes(term.toLowerCase()) || !term;\n    };\n  };\n\n  const filterData = data => {\n    let dataFilter = users.filter(searchingFor(data)).map(x => {\n      return x;\n    });\n    setUsersFilters(dataFilter);\n  };\n\n  useEffect(() => {\n    filterData(input.input);\n  }, [input.input]);\n  useEffect(() => {\n    filterData(input.input);\n  }, [users]);\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    const newArray = [];\n    getAllUsers(localStorage.token).then(response => {\n      if (response) {\n        response.map(y => {\n          let index = input.friends.findIndex(x => {\n            return x.friend._id === y._id;\n          });\n\n          if (index === -1 && y._id !== userId) {\n            newArray.push(y);\n          }\n        });\n        return setUsers(newArray);\n      }\n    });\n  };\n\n  const addFriend = (id, index) => {\n    input.clear();\n    addNewFriend({\n      friend: id\n    }, localStorage.token).then(response => {\n      getFriends(localStorage.token).then(response => {\n        input.setFriends(response.friendsData);\n        setUsers(users.splice(users.findIndex(x => {\n          return x._id === id;\n        })));\n      });\n    });\n  };\n\n  return React.createElement(SearchContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, usersFilters.map((values, index) => {\n    return React.createElement(Person, {\n      image: values.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, values.name), React.createElement(\"div\", {\n      className: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUserPlus,\n      onClick: () => {\n        addFriend(values._id, index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }));\n};","map":{"version":3,"sources":["C:/Users/Tiago Silva/Documents/GitHub/Projeto-doacaodesangue-web-javascript/Projeto-Doacao/clientside/src/components/Search.js"],"names":["React","useEffect","useState","SearchContent","Person","FontAwesomeIcon","faUserPlus","getAllUsers","addNewFriend","getFriends","jwt","Search","input","users","setUsers","usersFilters","setUsersFilters","userId","localStorage","token","id","searchingFor","term","x","name","toLowerCase","includes","filterData","data","dataFilter","filter","map","getUsers","newArray","then","response","y","index","friends","findIndex","friend","_id","push","addFriend","clear","setFriends","friendsData","splice","values","profileImage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SearchContent, Person } from './Styles/Search'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { getAllUsers, addNewFriend, getFriends } from './functions/UserFunctions';\nimport jwt from 'jwt-decode';\nexport const Search = (input) => {\n    const [users, setUsers] = useState([]);\n    const [usersFilters, setUsersFilters] = useState([]);\n    const userId = jwt(localStorage.token).id\n    const searchingFor = (term) => {\n        return (x) => {\n            return x.name.toLowerCase().includes(term.toLowerCase()) || !term;\n        }\n    }\n    const filterData = (data) => {\n        let dataFilter = users.filter(searchingFor(data)).map((x) => {\n            return x;\n        })\n        setUsersFilters(dataFilter)\n    }\n    useEffect(() => {\n        filterData(input.input);\n    }, [input.input]);\n    useEffect(() => {\n        filterData(input.input);\n    }, [users]);\n    useEffect(() => {\n        getUsers();\n    }, []);\n    const getUsers = async () => {\n        const newArray = [];\n        getAllUsers(localStorage.token).then(response => {\n            if (response) {\n                response.map((y)=>{\n                    let index = input.friends.findIndex((x)=>{return x.friend._id === y._id})\n                    if(index === -1 && y._id !== userId){\n                        newArray.push(y) \n                    }\n                })\n                return setUsers(newArray);\n            }\n        })\n    }\n    const addFriend = (id, index)=>{\n        input.clear();\n        addNewFriend({friend: id}, localStorage.token).then(response =>{\n            getFriends(localStorage.token).then(response =>{\n                input.setFriends(response.friendsData)\n                setUsers(users.splice(users.findIndex((x)=>{return x._id === id})))\n             })\n        })\n    }\n    return (\n        <SearchContent>\n            {usersFilters.map((values, index) => {\n                return (\n                    <Person image={values.profileImage}>\n                        <div className='img'>\n                        </div>\n                        <div className='name'>\n                            {values.name}\n                        </div>\n                        <div className='add'>\n                            <FontAwesomeIcon icon={faUserPlus} onClick={()=>{addFriend(values._id, index)}}/>\n                        </div>\n                    </Person>\n                )\n            })}\n\n\n\n        </SearchContent>\n    )\n}"]},"metadata":{},"sourceType":"module"}