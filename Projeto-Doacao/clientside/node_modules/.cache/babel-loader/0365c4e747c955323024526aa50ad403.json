{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tiago Silva\\\\Documents\\\\GitHub\\\\Projeto-doacaodesangue-web-javascript\\\\Projeto-Doacao\\\\clientside\\\\src\\\\components\\\\Posts.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Content, Post } from \"./Styles/Posts\";\nimport { NewPost } from \"./NewPost\";\nimport { useSelector } from \"react-redux\";\nimport { getPosts } from \"./functions/UserFunctions\";\nimport io from \"socket.io-client\";\nexport const Posts = user => {\n  const socket = io(\"http://192.168.1.5:5000\");\n  socket.on(\"teste\", data => {\n    getPost();\n  });\n  const [posts, setPosts] = useState(user.posts);\n  const [users, setUsers] = useState(user);\n  const profileImage = useSelector(state => state.UserReducer.profileImage);\n\n  const getPost = async () => {\n    await getPosts(localStorage.token).then(response => {\n      if (response) {\n        setPosts(response.post.sort((a, b) => {\n          const keyA = new Date(a.createdAt),\n                keyB = new Date(b.createdAt);\n          if (keyA > keyB) return -1;\n          return 0;\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    setUsers({ ...users,\n      image: profileImage\n    });\n  }, [profileImage]);\n  useEffect(() => {\n    setPosts(user.posts);\n  }, [user.posts]);\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(NewPost, Object.assign({}, users, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), posts.map(values => {\n    return React.createElement(Post, {\n      image: values.user.profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profileInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, values.user.name))), React.createElement(\"div\", {\n      className: \"contentPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, values.description, React.createElement(\"div\", {\n      className: \"imgPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: values.imageContent,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n  }));\n};","map":{"version":3,"sources":["C:/Users/Tiago Silva/Documents/GitHub/Projeto-doacaodesangue-web-javascript/Projeto-Doacao/clientside/src/components/Posts.js"],"names":["React","useEffect","useState","Content","Post","NewPost","useSelector","getPosts","io","Posts","user","socket","on","data","getPost","posts","setPosts","users","setUsers","profileImage","state","UserReducer","localStorage","token","then","response","post","sort","a","b","keyA","Date","createdAt","keyB","image","map","values","name","description","imageContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Content, Post } from \"./Styles/Posts\";\nimport { NewPost } from \"./NewPost\";\nimport { useSelector } from \"react-redux\";\nimport { getPosts } from \"./functions/UserFunctions\";\nimport io from \"socket.io-client\";\nexport const Posts = (user) => {\n  const socket = io(\"http://192.168.1.5:5000\");\n  socket.on(\"teste\", (data) => {\n    getPost();\n  });\n  const [posts, setPosts] = useState(user.posts);\n  const [users, setUsers] = useState(user);\n  const profileImage = useSelector((state) => state.UserReducer.profileImage);\n  const getPost = async () => {\n    await getPosts(localStorage.token).then((response) => {\n      if (response) {\n        setPosts(\n          response.post.sort((a, b) => {\n            const keyA = new Date(a.createdAt),\n              keyB = new Date(b.createdAt);\n            if (keyA > keyB) return -1;\n\n            return 0;\n          })\n        );\n      }\n    });\n  };\n  useEffect(() => {\n    setUsers({ ...users, image: profileImage });\n  }, [profileImage]);\n  useEffect(() => {\n    setPosts(user.posts);\n  }, [user.posts]);\n  return (\n    <Content>\n      <NewPost {...users} />\n      {posts.map((values) => {\n        return (\n          <Post image={values.user.profileImage}>\n            <div className=\"profile\">\n              <div className=\"profileInfo\">\n                <div className=\"img\"></div>\n                <p>{values.user.name}</p>\n              </div>\n            </div>\n            <div className=\"contentPost\">\n              {values.description}\n              <div className=\"imgPost\">\n                <img src={values.imageContent} alt=\"\"></img>\n              </div>\n            </div>\n          </Post>\n        );\n      })}\n    </Content>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}